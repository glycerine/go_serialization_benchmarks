// Autogenerated by Thrift Compiler (1.0.0-dev)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package goserbench

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

// Attributes:
//  - Name
//  - BirthDay
//  - Phone
//  - Siblings
//  - Spouse
//  - Money
type ThriftA struct {
	Name     string  `thrift:"name,1" db:"name" json:"name"`
	BirthDay int64   `thrift:"birthDay,2" db:"birthDay" json:"birthDay"`
	Phone    string  `thrift:"phone,3" db:"phone" json:"phone"`
	Siblings int32   `thrift:"siblings,4" db:"siblings" json:"siblings"`
	Spouse   bool    `thrift:"spouse,5" db:"spouse" json:"spouse"`
	Money    float64 `thrift:"money,6" db:"money" json:"money"`
}

func NewThriftA() *ThriftA {
	return &ThriftA{}
}

func (p *ThriftA) GetName() string {
	return p.Name
}

func (p *ThriftA) GetBirthDay() int64 {
	return p.BirthDay
}

func (p *ThriftA) GetPhone() string {
	return p.Phone
}

func (p *ThriftA) GetSiblings() int32 {
	return p.Siblings
}

func (p *ThriftA) GetSpouse() bool {
	return p.Spouse
}

func (p *ThriftA) GetMoney() float64 {
	return p.Money
}
func (p *ThriftA) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *ThriftA) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *ThriftA) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.BirthDay = v
	}
	return nil
}

func (p *ThriftA) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Phone = v
	}
	return nil
}

func (p *ThriftA) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Siblings = v
	}
	return nil
}

func (p *ThriftA) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Spouse = v
	}
	return nil
}

func (p *ThriftA) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadDouble(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Money = v
	}
	return nil
}

func (p *ThriftA) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ThriftA"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *ThriftA) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("name", thrift.STRING, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.name (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:name: ", p), err)
	}
	return err
}

func (p *ThriftA) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("birthDay", thrift.I64, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:birthDay: ", p), err)
	}
	if err := oprot.WriteI64(int64(p.BirthDay)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.birthDay (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:birthDay: ", p), err)
	}
	return err
}

func (p *ThriftA) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:phone: ", p), err)
	}
	if err := oprot.WriteString(string(p.Phone)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:phone: ", p), err)
	}
	return err
}

func (p *ThriftA) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("siblings", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:siblings: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Siblings)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.siblings (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:siblings: ", p), err)
	}
	return err
}

func (p *ThriftA) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("spouse", thrift.BOOL, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:spouse: ", p), err)
	}
	if err := oprot.WriteBool(bool(p.Spouse)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.spouse (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:spouse: ", p), err)
	}
	return err
}

func (p *ThriftA) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("money", thrift.DOUBLE, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:money: ", p), err)
	}
	if err := oprot.WriteDouble(float64(p.Money)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.money (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:money: ", p), err)
	}
	return err
}

func (p *ThriftA) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ThriftA(%+v)", *p)
}
